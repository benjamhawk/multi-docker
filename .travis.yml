language: generic

sudo: required
services:
  - docker

# build and run tests
before_install:
  - docker build -t benjamhawk/react-test -f ./client/Dockerfile.dev ./client
  # if I had testins in other enviroments it would look like
  # - docker build -t benjamhawk/server-test -f ./serverDockerfile.dev ./server

script:
# run tests in react container
   - docker run -e CI=true benjamhawk/react-test npm run test
   # if I had testins in other enviroments it would look like
  #  - docker run benjamhawk/server-test npm run test

# after tests pass build the production version of each container
after_success:
  - docker build -t benjamhawk/multi-client ./client
  - docker build -t benjamhawk/multi-nginx ./nginx
  - docker build -t benjamhawk/multi-server ./server
  - docker build -t benjamhawk/multi-worker ./worker
  # Log in to the docker CLI (via env variables in travis dashboard)
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Take those images and push them to docker hub
  - docker push benjamhawk/multi-client
  - docker push benjamhawk/multi-nginx 
  - docker push benjamhawk/multi-server 
  - docker push benjamhawk/multi-worker 


deploy:
  provider: elasticbeanstalk
  region: 'us-east-1'
  app: 'multi-docker'
  env: 'Multidocker-env'
  bucket_name:  "elasticbeanstalk-us-east-1-336762538916"
  bucket_path: "docker-multi"
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY